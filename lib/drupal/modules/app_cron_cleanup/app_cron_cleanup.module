<?php

/**
 * @file
 * Contains app_cron_cleanup.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function app_cron_cleanup_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the app_cron_cleanup module.
    case 'help.page.app_cron_cleanup':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Cleans up cron messages.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_cron().
 */
function app_cron_cleanup_cron() {
  $interval = 60 * 5;
  $request_time = REQUEST_TIME;
  $next_execution = \Drupal::state()->get('app_cron_cleanup.next_execution');
  $next_execution = !empty($next_execution) ? $next_execution : 0;
  if ($request_time >= $next_execution) {
    $previous_execution = $request_time - $interval;
    \Drupal::logger('app_cron_cleanup')->notice('app_cron_cleanup ran');

    $database = \Drupal::database();
    $query = $database->select('watchdog', 'w');
    $query->condition('w.message', 'Cron run completed.');
    $query->condition('w.timestamp', [$request_time, $previous_execution], 'BETWEEN');
    $count = $query->count()->execute();

    \Drupal::logger('app_cron_cleanup')->notice('Counted ' . $count . 'cron runs.');

    \Drupal::state()->set('app_cron_cleanup.next_execution', REQUEST_TIME + $interval);
  }
}
