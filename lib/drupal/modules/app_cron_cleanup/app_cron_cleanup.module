<?php

/**
 * @file
 * Contains app_cron_cleanup.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\ultimate_cron\Entity\CronJob;

/**
 * Implements hook_help().
 */
function app_cron_cleanup_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the app_cron_cleanup module.
    case 'help.page.app_cron_cleanup':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Cleans up cron messages.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Function callback to clean up watchdog of cron messages.
 */
function _app_cron_cleanup_watchdog_cron_cleanup(CronJob $job) {

  // Setting some variables.
  $database = \Drupal::database();
  $request_time = REQUEST_TIME + 5;
  $log_entry = isset($job->log_entry) ? $job->log_entry : $job->loadLatestLogEntry();
  $start_time = $log_entry->start_time - 5;

  // Get the count of messages to delete.
  $query = $database->select('watchdog');
  $query->condition('message', 'Cron run completed.');
  $query->condition('timestamp', [$start_time, $request_time], 'BETWEEN');
  $count = $query->countQuery()->execute()->fetchField();

  // Delete the messages.
  $query = $database->delete('watchdog');
  $query->condition('message', 'Cron run completed.');
  $query->condition('timestamp', [$start_time, $request_time], 'BETWEEN');
  $query->execute();

  // Insert new message.
  \Drupal::logger('app_cron_cleanup')->notice('Compiled: ' . $count . ' cron runs completed.');

}
