version: '3.7'

services:

  traefik:
    image: traefik:2.3
    restart: unless-stopped
    healthcheck:
      test: traefik healthcheck
      interval: 2s
      timeout: 10s
      retries: 5
      start_period: 5s
    environment:
      TRAEFIK_DOMAIN:
      TRAEFIK_BASIC_AUTH:
      TRAEFIK_PROXY:
      DO_AUTH_TOKEN:
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./lib/docker/compose/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./lib/docker/compose/traefik/config.yml:/etc/traefik/config.yml:ro
      - ./certs/acme.json:/acme.json
      - ./certs:/etc/certs:ro
    networks:
      - ${TRAEFIK_NETWORK:-proxy}
    labels:
      traefik.enable: true
      traefik.http.routers.traefik: true

  portainer:
    image: portainer/portainer-ce
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000
      - 8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      traefik.enable: true
      traefik.http.routers.portainer.rule: Host(`portainer.${TRAEFIK_DOMAIN}`)
      traefik.http.routers.portainer.tls: true
      traefik.http.routers.portainer.service: portainer
      traefik.http.services.portainer.loadbalancer.server.port: 9000
    networks:
      - proxy

  dev:
    image: verbral/php-theia:7.4
    working_dir: ${PWD}
    environment:
      ENVIRONMENT: dev
      BEHAT_PARAMS: '{"extensions":{"Behat\\MinkExtension":{"base_url":"http://dev.${TRAEFIK_DOMAIN}"}}}'
      TRAEFIK_DOMAIN:
      APACHE_DOCUMENT_ROOT: ${PWD}
      PHP_EXTENSION_BLACKFIRE: 1
      PHP_EXTENSION_GD: 1
      PHP_EXTENSION_BCMATH: 1
      PHP_INI_ERROR_REPORTING: E_ALL
      PHP_INI_MEMORY_LIMIT: 2g
      WAKATIME_API_KEY:
      GIT_USER_NAME:
      GIT_USER_EMAIL:
      SENDGRID_API_KEY:
      SOCIAL_AUTH_FACEBOOK_APP_ID:
      SOCIAL_AUTH_FACEBOOK_APP_SECRET:
      SOCIAL_AUTH_GOOGLE_CLIENT_ID:
      SOCIAL_AUTH_GOOGLE_CLIENT_SECRET:
      GOOGLE_MAPS_API_KEY:
      CRON_USER_1: root
      CRON_SCHEDULE_1: '* * * * *'
      CRON_COMMAND_1: if [ "${CRON_DISABLED_PROD:-0}" != 1 ] ; then drush -q @prod core:cron ; fi
      CRON_USER_2: root
      CRON_SCHEDULE_2: '* * * * *'
      CRON_COMMAND_2: if [ "${CRON_DISABLED_PREPROD:-0}" != 1 ] ; then drush -q @pre-prod core:cron ; fi
      CRON_USER_3: root
      CRON_SCHEDULE_3: '* * * * *'
      CRON_COMMAND_3: if [ "${CRON_DISABLED_POSTPROD:-0}" != 1 ] ; then drush -q @post-prod core:cron ; fi
    volumes:
      - ${PWD}:${PWD}
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ~/.ssh:/home/docker/.ssh
      - ~/.composer:/home/docker/.composer
    labels:
      traefik.enable: true
      traefik.http.routers.ide.tls: true
      traefik.http.routers.ide.rule: Host(`ide.${TRAEFIK_DOMAIN}`)
      traefik.http.routers.ide.service: ide
      traefik.http.routers.production.tls: true
      traefik.http.routers.production.rule: Host(`production.${TRAEFIK_DOMAIN}`)
      traefik.http.routers.production.service: dev
      traefik.http.routers.pre-production.tls: true
      traefik.http.routers.pre-production.rule: Host(`pre-production.${TRAEFIK_DOMAIN}`)
      traefik.http.routers.pre-production.service: dev
      traefik.http.routers.post-production.tls: true
      traefik.http.routers.post-production.rule: Host(`post-production.${TRAEFIK_DOMAIN}`)
      traefik.http.routers.post-production.service: dev
      traefik.http.services.dev.loadbalancer.server.port: 80
      traefik.http.services.ide.loadbalancer.server.port: 3000
    networks:
      - proxy

  selenium:
    image: selenium/standalone-chrome
    # These hosts point back outside of traefik to let traefik direct it to
    # the correct service. We can not rely on the docker service names because
    # apache is still directing to the right environment. Also this will work
    # regardless of local, ci or production environments.
    # @see: lib/docker/image/Dockerfile
    extra_hosts:
      - "${TRAEFIK_DOMAIN}:172.17.0.1"
      - "production.${TRAEFIK_DOMAIN}:172.17.0.1"
      - "pre-production.${TRAEFIK_DOMAIN}:172.17.0.1"
      - "post-production.${TRAEFIK_DOMAIN}:172.17.0.1"
    networks:
      - proxy

  backstop:
    image: backstopjs/backstopjs
    # These hosts point back outside of traefik to let traefik direct it to
    # the correct service. We can not rely on the docker service names because
    # apache is still directing to the right environment. Also this will work
    # regardless of local, ci or production environments.
    # @see: lib/docker/image/Dockerfile
    extra_hosts:
      - "${TRAEFIK_DOMAIN}:172.17.0.1"
      - "production.${TRAEFIK_DOMAIN}:172.17.0.1"
      - "pre-production.${TRAEFIK_DOMAIN}:172.17.0.1"
      - "post-production.${TRAEFIK_DOMAIN}:172.17.0.1"
    volumes:
      - ${PWD}/tests/backstop:/src

#  blackfire:
#    image: blackfire/blackfire
#    environment:
#        - BLACKFIRE_CLIENT_ID
#        - BLACKFIRE_CLIENT_TOKEN
#        - BLACKFIRE_SERVER_ID
#        - BLACKFIRE_SERVER_TOKEN

  prod:
    image: docker.pkg.github.com/verbruggenalex/appointment/prod:latest
    working_dir: /var/www/html
    environment:
      ENVIRONMENT: prod
      TRAEFIK_DOMAIN:
      TRAEFIK_BASIC_AUTH:
      APACHE_DOCUMENT_ROOT: /var/www/html
      SOCIAL_AUTH_FACEBOOK_APP_ID:
      SOCIAL_AUTH_FACEBOOK_APP_SECRET:
      SOCIAL_AUTH_GOOGLE_CLIENT_ID:
      SOCIAL_AUTH_GOOGLE_CLIENT_SECRET:
      GOOGLE_MAPS_API_KEY:
      SENDGRID_API_KEY:
      CRON_USER_1: root
      CRON_SCHEDULE_1: '* * * * *'
      CRON_COMMAND_1: if [ "${CRON_DISABLED_PROD:-0}" != 1 ] ; then drush -q @prod core:cron ; fi
      CRON_USER_2: root
      CRON_SCHEDULE_2: '* * * * *'
      CRON_COMMAND_2: if [ "${CRON_DISABLED_PREPROD:-0}" != 1 ] ; then drush -q @pre-prod core:cron ; fi
      CRON_USER_3: root
      CRON_SCHEDULE_3: '* * * * *'
      CRON_COMMAND_3: if [ "${CRON_DISABLED_POSTPROD:-1}" != 1 ] ; then drush -q @post-prod core:cron ; fi
    volumes:
      - ${PWD}:/var/www/html
    extra_hosts:
      - "${TRAEFIK_DOMAIN}:127.0.0.1"
      - "production.${TRAEFIK_DOMAIN}:127.0.0.1"
      - "pre-production.${TRAEFIK_DOMAIN}:127.0.0.1"
      - "post-production.${TRAEFIK_DOMAIN}:127.0.0.1"
    labels:
      traefik.enable: true
      traefik.http.routers.production.tls: true
      traefik.http.routers.production.middlewares: secure-basicauth@file
      traefik.http.routers.production.rule: Host(`${TRAEFIK_DOMAIN}`) || Host(`production.${TRAEFIK_DOMAIN}`)
      traefik.http.routers.pre-production.tls: true
      traefik.http.routers.pre-production.middlewares: secure-basicauth@file
      traefik.http.routers.pre-production.rule: Host(`pre-production.${TRAEFIK_DOMAIN}`)
      traefik.http.routers.post-production.tls: true
      traefik.http.routers.post-production.middlewares: secure-basicauth@file
      traefik.http.routers.post-production.rule: Host(`post-production.${TRAEFIK_DOMAIN}`)
    networks:
      - proxy

  ci:
    image: docker.pkg.github.com/verbruggenalex/appointment/ci:latest
    working_dir: /var/www/html
    environment:
      ENVIRONMENT: ci
      COLUMNS: 200
      BEHAT_PARAMS: '{"extensions":{"Behat\\MinkExtension":{"base_url":"http://web.${TRAEFIK_DOMAIN}"}}}'
      TRAEFIK_DOMAIN:
      APACHE_DOCUMENT_ROOT: /var/www/html
      SOCIAL_AUTH_FACEBOOK_APP_ID:
      SOCIAL_AUTH_FACEBOOK_APP_SECRET:
      SOCIAL_AUTH_GOOGLE_CLIENT_ID:
      SOCIAL_AUTH_GOOGLE_CLIENT_SECRET:
      GOOGLE_MAPS_API_KEY:
      SENDGRID_API_KEY:
      CRON_USER_1: root
      CRON_SCHEDULE_1: '* * * * *'
      CRON_COMMAND_1: if [ "${CRON_DISABLED_PROD:-1}" != 1 ] ; then drush -q @prod core:cron ; fi
      CRON_USER_2: root
      CRON_SCHEDULE_2: '* * * * *'
      CRON_COMMAND_2: if [ "${CRON_DISABLED_PREPROD:-1}" != 1 ] ; then drush -q @pre-prod core:cron ; fi
      CRON_USER_3: root
      CRON_SCHEDULE_3: '* * * * *'
      CRON_COMMAND_3: if [ "${CRON_DISABLED_POSTPROD:-1}" != 1 ] ; then drush -q @post-prod core:cron ; fi
    volumes:
      - ${PWD}:/var/www/html
    extra_hosts:
      - "${TRAEFIK_DOMAIN}:127.0.0.1"
      - "production.${TRAEFIK_DOMAIN}:127.0.0.1"
      - "pre-production.${TRAEFIK_DOMAIN}:127.0.0.1"
      - "post-production.${TRAEFIK_DOMAIN}:127.0.0.1"
    labels:
      traefik.enable: true
      traefik.http.routers.production.tls: true
      traefik.http.routers.production.rule: Host(`${TRAEFIK_DOMAIN}`) || Host(`production.${TRAEFIK_DOMAIN}`)
      traefik.http.routers.pre-production.tls: true
      traefik.http.routers.pre-production.rule: Host(`pre-production.${TRAEFIK_DOMAIN}`)
      traefik.http.routers.post-production.tls: true
      traefik.http.routers.post-production.rule: Host(`post-production.${TRAEFIK_DOMAIN}`)
    networks:
      - proxy

  mysql:
    image: mysql:5.7
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=drupal
    networks:
      - proxy
    volumes:
      - mysql:/var/lib/mysql

networks:
  proxy:
    external: true
    name: ${TRAEFIK_NETWORK:-proxy}

volumes:
  mysql:
  portainer_data:

