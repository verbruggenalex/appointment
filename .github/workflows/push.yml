name: Push on master

on:
  push:
    branches:
      - master

jobs:
  push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - uses: marceloprado/has-changed-path@v1
        id: changed-dockerfile
        with:
          paths: lib/docker/image/Dockerfile

      # Looks like in the future we might need some image versioning here.
      - name: Build and push Docker images
        if: steps.changed-dockerfile.outputs.changed == 'true'
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u verbruggenalex --password-stdin
          docker build lib/docker/image --target prod --tag docker.pkg.github.com/verbruggenalex/appointment/prod
          docker build lib/docker/image --target ci --tag docker.pkg.github.com/verbruggenalex/appointment/ci
          docker push docker.pkg.github.com/verbruggenalex/appointment/prod
          docker push docker.pkg.github.com/verbruggenalex/appointment/ci

      - name: Setup environment
        env:
          TRAEFIK_DOMAIN: ${{ secrets.TRAEFIK_DOMAIN }}
          TRAEFIK_NETWORK: ${{ secrets.TRAEFIK_NETWORK }}
          TRAEFIK_BASIC_AUTH: ${{ secrets.TRAEFIK_BASIC_AUTH }}
        run: |
          sudo chmod 777 /var/run/docker.sock
          cp .env.dist .env
          make mkcert_setup mkcert_install docker_network_create setup_hosts
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u verbruggenalex --password-stdin
          make ci
          sleep 5
          git fetch --tags

      - name: Cache Composer
        uses: actions/cache@v2
        with:
          path: |
            vendor/
            web/
            dump.sql
          key: sql-vendor-web-${{ hashFiles('composer.lock') }}

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@master"

      - name: Cache last tag
        uses: actions/cache@v2
        with:
          path: |
            .tmp/${{ steps.previoustag.outputs.tag }}.tar.gz
            .tmp/${{ steps.previoustag.outputs.tag }}.sql
          key: dist-sql-${{ steps.previoustag.outputs.tag }}

      - name: Composer install
        run: |
          docker-compose exec -T ci composer install --no-progress --no-suggest --ansi

      - name: Setup production
        run: |
          docker-compose exec -T ci apt-get -y install wget
          docker-compose exec -T ci ./lib/scripts/build.sh ${{ steps.previoustag.outputs.tag }}

      - name: Test project
        run: |
          docker-compose exec -T ci composer test-phpcs
          docker-compose exec -T ci composer setup-project
          docker-compose exec -T ci composer test-behat

      - name: Test backstop
        run: |
          docker-compose run --rm backstop reference
          docker-compose run --rm backstop test

      - name: Upload backstop
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: backstop
          path: tests/backstop/backstop_data
          if-no-files-found: ignore
          retention-days: 1

      # - name: Test lighthouse
      #   if: startsWith(github.ref, 'refs/tags/') != true
      #   uses: treosh/lighthouse-ci-action@v3
      #   with:
      #     urls: |
      #       https://web.localhost.com/en
      #       https://web.localhost.com/fr
      #       https://web.localhost.com/nl
      #     configPath: ./lighthouserc.json
      #     temporaryPublicStorage: true
