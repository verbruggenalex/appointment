name: Tag release.

on:
  push:
    tags:
      - '*'

jobs:
  push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup environment
        env:
          TRAEFIK_DOMAIN: ${{ secrets.TRAEFIK_DOMAIN }}
          TRAEFIK_NETWORK: ${{ secrets.TRAEFIK_NETWORK }}
          TRAEFIK_BASIC_AUTH: ${{ secrets.TRAEFIK_BASIC_AUTH }}
        run: |
          sudo chmod 777 /var/run/docker.sock
          cp .env.dist .env
          make mkcert_setup mkcert_install docker_network_create setup_hosts
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u verbruggenalex --password-stdin
          make up-ci
          sleep 5

      - name: Composer install
        run: |
          docker-compose exec -T ci composer install --no-dev --no-progress --ansi
          docker-compose exec -T ci composer create-dirs
          docker-compose exec -T ci composer reset-permissions

      - name: Test project
        run: |
          docker-compose exec -T ci composer drupal-install-clean
          docker-compose exec -T ci composer import-local-translations
          docker-compose exec -T ci composer import-translations
          docker-compose exec -T ci composer build-bak

      - name: Backstop reference
        run: |
          docker-compose exec -T ci ln -sfn /var/www/html/web /var/www/html/build/production
          docker-compose exec -T ci ls -la /var/www/html/build
          docker-compose run --rm backstop reference
          tar -czf backstop-reference.tar.gz tests/backstop/backstop_data/bitmaps_reference/

      - name: Check watchdog
        if: always()
        run: |
          docker-compose exec -T ci drush @web ws --count=50
          docker-compose exec -T ci drush @prod ws --count=50

      - name: Prepare release
        run: |
          docker-compose exec -T ci composer build-dist

      - name: Create release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            dist.tar.gz
            clean.sql.gz
            backstop-reference.tar.gz

      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

      - name: Deploy with SSH
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.SSH_KEY }}
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          passphrase: ${{ secrets.SSH_PASS }}
          script: |
            echo ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
            echo ${{ steps.branch_name.outputs.SOURCE_TAG }}
            cd appointment
            git pull
            git checkout ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
            make unpack tag=${{ steps.branch_name.outputs.SOURCE_TAG }}
            make deploy

